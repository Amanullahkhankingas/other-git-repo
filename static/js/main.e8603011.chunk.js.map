{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextArea.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","className","role","alert","type","msg","Navbar","concat","modey","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","placeholder","value","onClick","color","color1","toggles","aria-checked","htmlFor","buttonText","TextArea","dele","character","replaced","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","onChange","event","target","console","log","rows","newtext","toUpperCase","showalert","lowtext","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","word","updateText","replaceAll","deleteCharacterFromText","wordrepla","charDele","summry","length","defaultProps","homeText","App","bg","setBg","_useState3","_useState4","setButtonText","_useState5","_useState6","setAlert","massege","_useState7","_useState8","setModey","body","style","background","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e8603011.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n  // const capitalized = (word)=>{\r\n  //   let lower = word.toLowerCase();\r\n  //   return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n       <div className=\"alert alert-warning alert-dismissible fade show h-0\" role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n      </div>  \r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { a } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg color-white bg-${props.modey}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className= {  ` navbar-brand text-${props.modey === \"light\"? \"dark\" : \"light\" }  `}  href=\"#\"   >\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item mx-2\">\r\n                <a className= {  ` nav-a active text-${props.modey === \"light\"? \"dark\" : \"light\" }  `}  aria-current=\"page\" href=\"#\">\r\n                  {/* {props.homeText} */}\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item mx-2\">\r\n                <a className={  `nav-a text-${props.modey === \"light\"? \"dark\" : \"light\" }  `} href=\"#\">\r\n                  About\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success \" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n           <div> <button id=\"green\" value=\"text\" className=\"w-2 h-2 bg-success rounded-5 text-light font-2 px-2 mx-2 border-2 curser\" onClick={props.color(\"green\")} >green</button ></div>\r\n           <div> <button id=\"black\" value=\"text\" className=\"w-2 h-2 bg-secondary rounded-5 text-light font-2 px-2 mx-2  \" onClick={props.color1(\"black\")}>black</button ></div>\r\n            {/* <button id=\"blue\" value=\"text\"  className=\"w-2 h-2 bg-primary rounded-5 text-light font-2 px-2 mx-2 border-2 \" onClick={props.color(\"blue\")}>blue</button > */}\r\n          </div>\r\n          {/* dark mode button */}\r\n        <div className=\"form-check form-switch my-2 mx-3\" onClick={props.toggles} >\r\n         <input className=\"form-check-input\"  type=\"checkbox\" role=\"switch\" aria-checked id=\"flexSwitchCheckDefault\"/>\r\n         <label className={`form-check-label text-${props.modey === \"light\"? \"dark\" : \"light\"   } `} htmlFor=\"flexSwitchCheckDefault\">{props.buttonText}</label>\r\n        </div> \r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  homeText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"default title\",\r\n  homeText: \"default home\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextArea(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    // setText(\"new text\") // correct way to change the state\r\n    // text= \"new text\" // correct way to change the state\r\n\r\n    let textUpClick = ()=> {\r\n        console.log(\"upper case\" + text);\r\n        let newtext = text.toUpperCase()\r\n\r\n        setText(newtext)\r\n\r\n        props.showalert(\"Text convert to UpperCase\", \"Success\");\r\n      }\r\n      let textLowClick = ()=>{\r\n      let lowtext = text.toLowerCase()\r\n      setText(lowtext)\r\n\r\n      props.showalert(\"Text convert to LowerCase\", \"Success\");\r\n    }\r\n    let textClearClick = ()=>{\r\n      \r\n      setText(\" \")\r\n      props.showalert(\"Ready Box for new text\", \"Success\");\r\n    }\r\n    let dele\r\n    let character\r\n    let replaced\r\n    // characterand word deleting from text\r\n    \r\n    let wordDelete = (charDele)=>{\r\n      character = charDele.target.value\r\n      console.log(character)\r\n\r\n    }\r\n    let wordReplace = (wordrepla)=>{\r\n      replaced = wordrepla.target.value\r\n      console.log(replaced)\r\n      \r\n    }\r\n    \r\n    \r\n    let charDele = ()=>{\r\n      let deleteCharacterFromText = text.replaceAll(character ,replaced)\r\n      \r\n      \r\n      setText(deleteCharacterFromText)\r\n      props.showalert(\"New word is Replaced by selected word\", \"Success\");\r\n    }\r\n    \r\n    let handleDeleteWord = (select)=>{\r\n      dele = select.target.value\r\n      // console.log(\"dele \" + dele)\r\n    }\r\n    \r\n    \r\n    let textDeleteClick = ()=>{\r\n      \r\n      // for(let k=0 ;k<=text.length;k++){\r\n        \r\n        \r\n        \r\n        // let s= \"s\"\r\n        // let S= \"S\"  \r\n        \r\n        //    let updateText = text.replaceAll(S,\"\")\r\n        //    let T =updateText.replaceAll(s,\"\")\r\n        //      setText(T)\r\n        \r\n        \r\n        \r\n        \r\n        let word = \" \" + dele + \" \"\r\n        \r\n        \r\n        let updateText = text.replaceAll(word,\" \")\r\n        \r\n        setText(updateText)\r\n        \r\n        props.showalert(\" Selected word is deleted from text\", \"Success\");\r\n        \r\n        // }\r\n      }\r\n      \r\n      \r\n      \r\n      let handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n        console.log(\"OnChange\");\r\n      }\r\n      \r\n      \r\n      \r\n      \r\n\r\n    //copy wala code for text coping\r\n\r\n    const handleCopy = ()=>{\r\n      \r\n  \r\n      let text = document.getElementById(\"mybox\");\r\n      \r\n    text.select();\r\n    // text.setSelectionRange(0,999);\r\n    navigator.clipboard.writeText(text.value)\r\n    \r\n    props.showalert(\"Text of the box is copied\", \"Success\");\r\n  }\r\n  \r\n    //deleting extra spacing from text\r\n    \r\n    const handleExtraSpaces =() =>{\r\n      let newText = text.split(/[ ]+/)\r\n         setText(newText.join(\" \"))\r\n     \r\n         props.showalert(\"Remove Extra spaces from text\", \"Success\");\r\n     };\r\n     \r\n     \r\n     \r\n     return (\r\n    <div>\r\n    {/* <div className={` bg-${props.bcolor}`}> */}\r\n        < >\r\n               \r\n       <div className= {`container my-4 text-light text-${props.modey === \"light\"? \"dark\" : \"light\"   } `}>\r\n             <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          \r\n          <textarea className= 'form-control  '  value={text} onChange={handleOnChange} id=\"mybox\" rows=\"7\"></textarea>\r\n        </div>\r\n        \r\n        <button className='btn btn-primary mx-2'  onClick={ textUpClick }>Conver to UpperCase</button>\r\n        <button className='btn btn-primary mx-2' onClick={textLowClick}>Conver to LowerCase</button>\r\n        <button className='btn btn-primary mx-2' onClick={handleCopy}>Copy Text</button>\r\n        <button className='btn btn-primary mx-2' onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        <button className='btn btn-primary mx-2' onClick={textClearClick}>Clear</button>\r\n        <button className='btn btn-primary mx-2' onClick={textDeleteClick}>Delete Words</button> <input type=\"text\" placeholder='Write any word to delete from text' onChange={handleDeleteWord} /> <br />\r\n        <button className='btn btn-primary mx-2 my-4' onClick={charDele}>Replace Word</button><input className='my-4 mx-2' type=\"text\" placeholder='Write word for  replace' onChange={wordReplace} /> <input className='my-4 mx-2' type=\"text\" placeholder='by which word' onChange={wordDelete} />\r\n        </div>\r\n\r\n        \r\n               \r\n         <div className={` container text-${props.modey === \"light\"? \"dark\" : \"light\"   } `}>\r\n             <h1>{props.summry}</h1>\r\n             <p>{(text.split(\" \").length-1 )} words and {(text.length)} characters</p>\r\n             <p>{(text.split(\" \").length) * 0.008} Minutes require to read</p>\r\n       \r\n        </div>\r\n\r\n        <div  className={` container text-${props.modey === \"light\"? \"dark\" : \"light\"   }`}>\r\n          <h1 className='my-2' >Preview</h1>\r\n          <p>{text.length>0?text:\"Enter something in the text box above to preview it here\"}</p>\r\n        </div>\r\n        \r\n        \r\n        </>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport \"./Appa.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextArea from \"./components/TextArea\";\n// import Routes from \"react\";/\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n  \n// }from \"react-router-dom\";\n\n// let name = \"<b>aman</b>\";\n\nfunction App() {\n  //jsx file is that // it is a javascript syntex extention\n\n  //down section is bg color mode\n  // const[color,useColor] =useState(\"\")\n  //  let green,blue,black;\n  let bgs;\n  const [bg, setBg] = useState(\"\");\n\n  const color = (event) => {\n    bgs = event;\n    setBg(bgs);\n\n    setButtonText(\"Enable Black mode\");\n\n    // document.body.style.background = `green`\n  };\n  const color1 = (event) => {\n    bgs = event;\n    setBg(bgs);\n\n    setButtonText(\"Enable Black mode\");\n\n    // document.body.style.background = `green`\n  };\n  // const colorblue = (event)=>{\n  //   // bgg=color\n\n  //   blue= document.getElementById(\"blue\")\n  //   setBg(blue)\n\n  //   setButtonText(\"Enable Blue mode\")\n  //   // document.body.style.background = `green`\n  // }\n  // const colorgreen = (event)=>{\n\n  //   // bgg=color\n  //   green= document.getElementById(\"green\")\n  //  setBg(green)\n\n  //  // document.body.style.background = `green`\n  // }\n\n  //upper section is bg color mode\n\n  const [buttonText, setButtonText] = useState(\"Enable Dark Modec\");\n\n  const [alert, setAlert] = useState(\"\");\n\n  let showalert = (massege, type) => {\n    setAlert({\n      msg: massege,\n      type: type,\n    });\n\n    // setTimeout(() => {\n    //   setAlert(\"\");\n    // }, 3700);\n  };\n\n  const [modey, setModey] = useState(\"light\");\n  // const [bcolor,setBcolor] = useState(\"white\")\n  let toggles = () => {\n    if (modey === \"light\") {\n      setModey(\"dark\");\n      //  document.body.style.background = \"#565353\"\n      // setBcolor(\"light\")\n\n      document.body.style.background = `${bg}`;\n      setButtonText(\"Back Light Mode\");\n\n      document.title = \"TextUtlis - Enable Dark Mode\";\n\n      // setInterval(() => {\n      //   document.title = \"This App is amazing\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install it now \";\n      // }, 1500);\n\n      // setTimeout(() => {\n\n      // }, 1500);\n      showalert(\" Dark Mode has been enable\", \"Success\");\n    } else {\n      setModey(\"light\");\n      document.body.style.background = \"white\";\n\n      document.title = \"TextUtlis - Back to light Mode\";\n      // setBcolor(\"dark\")\n      // document.body.style.background = bcolor,\n      setButtonText(\"Enable Dark Mode\");\n\n      showalert(\" Light Mode has been enable\", \"Success\");\n    }\n  };\n  // document.body.style.background = {bcolor};\n\n  return (\n    //here in react we can return only one tag\n\n    //by the use of jsx segment tag we can return multi tags\n    //  <>\n\n    // <h1>hellow this is me</h1>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React with kolar Sardar\n    //     </a>\n    //   </header>\n    // </div>\n    // </>\n\n    //lecture 4 JSX file understanding\n\n    // <div className=\"blank\">lovely</div>\n    // <>\n    // <nav>\n    //   <ul>\n    //     <li>Home</li>\n    //     <li>Services</li>\n    //     <li>About Us</li>\n    //     <li>Contact Us</li>\n    //   </ul>\n    //   <section>\n    //     <h1>My Name is {name}</h1>\n    //     Lorem ipsum dolor sit amet consectetur adipisicing elit. Cupiditate, similique? Facere, commodi! Excepturi, et minus ipsam quibusdam odio ut obcaecati distinctio quae animi quas, harum veniam doloribus vero non porro.\n    //   </section>\n    // </nav>\n    // </>\n\n    //lecture 5    // Project 1 setup + adding bootsrap in react\n\n    <>\n      {/* <Navbar title=\"textUtils\" homeText= \"home\"  modey={modey}  toggles={toggles}  buttonText = {buttonText} colorgreen={colorgreen} colorblue={colorblue} colorblack={colorblack}/> */}\n\n      {/* <Navbar  /> */}\n\n      {/* <TextArea heading= \"Enter the text here for analyzing\" summry = \"Text Summry\"  modey= {modey} showalert={showalert} bcolor={bcolor}/> */}\n\n      {/* <Router>\n        <Navbar\n          title=\"textUtils\"\n          homeText=\"home\"\n          modey={modey}\n          toggles={toggles}\n          buttonText={buttonText}\n          color={color}\n          color1={color1}\n        />\n        <Alert alert={alert} />\n        <div>\n        <Routes>\n        <Route exact path=\"/about\">\n        <About/>\n        </Route>\n        <Route exact path=\"/\">\n        <TextArea\n        heading=\"Enter the text here for analyzing\"\n        summry=\"Text Summry\"\n        modey={modey}\n        showalert={showalert}\n            />\n            </Route>\n            </Routes>\n            </div>\n          </Router> */}\n\n<Navbar\n  title=\"textUtils\"\n  // homeText=\"home\"\n  modey={modey}\n  toggles={toggles}\n  buttonText={buttonText}\n  color={color}\n  color1={color1}\n\n\n/>\n<Alert alert={alert} />\n\n\n<TextArea\nheading=\"Enter the text here for analyzing\"\nsummry=\"Text Summry\"\nmodey={modey}\nshowalert={showalert}\n/>\n{/* <About/> */}\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}